// Project Description
description = "TOUCHSTONE PROJECT"

/*
 * Below applies to all projects.
 * 
 * local grabs - 
 * http://stackoverflow.com/questions/33431754/include-dependencies-in-groovy-application-without-repository-access
 * https://github.com/apache/groovy/blob/master/src/resources/groovy/grape/defaultGrapeConfig.xml
 * 
 */
allprojects{

    apply plugin: "java"
    apply plugin: "eclipse"
    apply plugin: "groovy"

    // Remember to chage at Version.groovy file
    version = "0.0.2"

    // Spock works with Java 1.8 and above
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        // Spock releases are available from Maven Central
        mavenCentral()
        // Spock snapshots are available from the Sonatype OSS snapshot repository
        maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }

    // Add new configuration for
    // dependencies needed to run
    // Groovy command line scripts.
    configurations { 
        automatonCli        
    }

    dependencies {

        compile 'org.codehaus.groovy:groovy-all:2.4.4'
        
        // dependencies for running our AutomatonCli
        automatonCli "org.codehaus.groovy:groovy-all:2.4.4", "commons-cli:commons-cli:1.2"

        // hidetake ssh
        compile 'org.hidetake:groovy-ssh:2.0.0'
        
        // aestasit ssh
        compile 'com.aestasit.infrastructure.sshoogr:sshoogr:0.9.25'
        
        // rxjava
        compile 'io.reactivex:rxjava:1.1.5'

        // snakeyaml
        //compile 'org.yaml:snakeyaml:1.17'

        // mandatory dependencies for using ec.eco.apache.http
        compile 'org.apache.httpcomponents:httpclient:4.2.2'
        testRuntime 'commons-logging:commons-logging:1.2'

        // mandatory dependencies for using Spock        
        //testCompile "org.spockframework:spock-core:1.0-groovy-2.4"

        // optional dependencies for using Spock
        //testCompile "org.hamcrest:hamcrest-core:1.3" // only necessary if Hamcrest matchers are used
        //testRuntime "cglib:cglib-nodep:3.1"          // allows mocking of classes (in addition to interfaces)
        //testRuntime "org.objenesis:objenesis:2.1"    // allows mocking of classes without default constructor (together with CGLIB)

    }

}

// task to run Groovy script available in the project's jar file
task automaton(type: JavaExec) {

    // Set classpath to run Groovy script from command line.
    classpath = files(configurations.automatonCli, "build/libs/${project.name}-${version}.jar")

    // Set the main class against the groovy script
    main = 'com.automaton.endpoints.AutomatonCli'

    // Get the commandline arguments or set to help
    def cliargs1 = System.getProperty("args1") ?: '-h'
    def cliargs2 = System.getProperty("args2")

    // Need to set the args as a list to set JavaExec's args
    def cliargsList = [cliargs1]
    if(cliargs2){
        cliargsList << cliargs2
    }

    // set against the main class' args
    args = cliargsList

}

defaultTasks 'automaton'